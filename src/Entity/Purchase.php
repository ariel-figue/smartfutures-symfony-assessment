<?php

namespace App\Entity;

use Doctrine\ORM\Mapping as ORM;
use ApiPlatform\Metadata\ApiResource;
use Doctrine\Common\Collections\ArrayCollection; 
use Doctrine\Common\Collections\Collection;   

/**
 * Purchase entity representing a transaction where a customer buys a book.
 * This entity is exposed as an API resource via API Platform.
 */
#[ORM\Entity]
#[ApiResource]
class Purchase
{
    /**
     * @var int|null The unique identifier for the purchase.
     * The ID is automatically generated by the database.
     */
    #[ORM\Id]
    #[ORM\GeneratedValue]
    #[ORM\Column(type: 'integer')]
    private ?int $id = null;

    /**
     * @var \DateTimeInterface|null The date and time when the purchase was made.
     */
    #[ORM\Column(type: 'datetime')]
    private ?\DateTimeInterface $purchaseDate = null;

    /**
     * @var Book|null The book associated with this purchase.
     * A purchase must be linked to a book.
     */
    #[ORM\ManyToOne(targetEntity: Book::class, inversedBy: 'purchases')]
    #[ORM\JoinColumn(nullable: false)]
    private ?Book $book = null;

    /**
     * @var Customer|null The customer who made the purchase.
     * A purchase must be linked to a customer.
     */
    #[ORM\ManyToOne(targetEntity: Customer::class, inversedBy: 'purchases')]
    #[ORM\JoinColumn(nullable: false)]
    private ?Customer $customer = null;

    /**
     * Get the ID of the purchase.
     * 
     * @return int|null
     */
    public function getId(): ?int
    {
        return $this->id;
    }

    /**
     * Get the purchase date.
     * 
     * @return \DateTimeInterface|null
     */
    public function getPurchaseDate(): ?\DateTimeInterface
    {
        return $this->purchaseDate;
    }

    /**
     * Set the purchase date.
     * 
     * @param \DateTimeInterface $purchaseDate
     * @return self
     */
    public function setPurchaseDate(\DateTimeInterface $purchaseDate): self
    {
        $this->purchaseDate = $purchaseDate;
        return $this;
    }

    /**
     * Get the book associated with this purchase.
     * 
     * @return Book|null
     */
    public function getBook(): ?Book
    {
        return $this->book;
    }

    /**
     * Set the book associated with this purchase.
     * 
     * @param Book|null $book
     * @return self
     */
    public function setBook(?Book $book): self
    {
        $this->book = $book;
        return $this;
    }

    /**
     * Get the customer who made this purchase.
     * 
     * @return Customer|null
     */
    public function getCustomer(): ?Customer
    {
        return $this->customer;
    }

    /**
     * Set the customer who made this purchase.
     * 
     * @param Customer|null $customer
     * @return self
     */
    public function setCustomer(?Customer $customer): self
    {
        $this->customer = $customer;
        return $this;
    }
}
